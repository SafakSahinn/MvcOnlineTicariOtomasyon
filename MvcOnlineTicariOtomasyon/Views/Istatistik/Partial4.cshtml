@model IEnumerable<MvcOnlineTicariOtomasyon.Models.Sınıflar.SinifGrup3>
@using System.Globalization
@{
    // Sayfa numarasını query string'den al
    int currentPage3 = Request.QueryString["page3"] != null ? int.Parse(Request.QueryString["page3"]) : 1;
    int rowsPerPage = 5;
    int totalRows = Model.Count();
    int totalPages3 = (int)Math.Ceiling((double)totalRows / rowsPerPage);

    // Sayfa verisini almak için Skip ve Take kullanıyoruz
    var currentPageData = Model.Skip((currentPage3 - 1) * rowsPerPage).Take(rowsPerPage);

    // Son sayfada eksik satırlar varsa, onları hesaplayalım
    int remainingRows = totalRows % rowsPerPage;
    bool isLastPage = currentPage3 == totalPages3;

    // Başlangıç sırasını hesapla, ilk sayfa için 1, diğerleri için doğru sayıyı belirle
    int startIndex = (currentPage3 - 1) * rowsPerPage + 1; // Bu, sıralamanın her sayfada devam etmesini sağlar
}

<div class="card">
    <div class="card-header" style="display: flex; justify-content: space-between; align-items: center;">
        <h3 class="card-title"><strong>Marka İstatistikleri</strong></h3>
        <div style="display: flex; gap: 10px; margin-left: auto;">
            <button id="prevPage3" class="btn btn-primary" @(currentPage3 == 1 ? "disabled" : "")>« Geri</button>
            <span style="font-weight: bold;" id="pageInfo3">Sayfa @currentPage3 / @totalPages3</span>
            <button id="nextPage3" class="btn btn-primary" @(currentPage3 == totalPages3 ? "disabled" : "")>İleri »</button>
        </div>
    </div>
    <div class="card-body p-0">
        <table class="table">
            <thead>
                <tr>
                    <th style="width: 55px">#</th>
                    <th style="width: 200px">Marka</th>
                    <th>Durum</th>
                    <th style="width: 110px">Sayı</th>
                </tr>
            </thead>
            <tbody>
                @{
                    int toplamMarkaSayisi = Model.Sum(x => x.Sayi);
                }

                @foreach (var x in currentPageData)
                {
                    double oran = toplamMarkaSayisi > 0 ? ((double)x.Sayi / toplamMarkaSayisi) * 100 : 1; // Yüzdelik oran hesapla
                    string oranStr = oran.ToString("0.#", CultureInfo.InvariantCulture).Replace(",", "."); // Ondalık sayıyı bir basamakla göster

                    // Renk sınıfını belirleme (oranın durumuna göre)
                    string progressBarClass = oran <= 20 ? "progress-bar-danger" :
                                                   oran <= 40 ? "progress-bar-warning" :
                                                   oran <= 60 ? "progress-bar-info" :
                                                   oran <= 80 ? "progress-bar-primary" :
                                                   "progress-bar-success";

                    string badgeClass = oran <= 20 ? "badge bg-danger" :
                                        oran <= 40 ? "badge bg-warning" :
                                        oran <= 60 ? "badge bg-info" :
                                        oran <= 80 ? "badge bg-primary" :
                                        "badge bg-success";

                    <tr>
                        <td>@startIndex</td> <!-- Burada startIndex kullanılıyor, sayfa sayfa devam eden sıralama -->
                        <td>@x.Marka</td>
                        <td style="display: flex; align-items: center;">
                            <span style="min-width: 40px; margin-right: 10px; font-weight: bold; text-align: left;">@oranStr%</span>
                            <div class="progress progress-xs" style="flex: 1;">
                                <div class="progress-bar @progressBarClass" style="width: @(oranStr)%"></div>
                            </div>
                        </td>
                        <td><span class="@badgeClass">@x.Sayi</span></td>
                    </tr>

                    startIndex++; // Sıra numarasını her satırda artırıyoruz
                }

                @if (isLastPage && remainingRows > 0)
                {
                    // Son sayfada eksik satır varsa boş satır ekle
                    for (int i = 0; i < (rowsPerPage - remainingRows); i++)
                    {
                        <tr class="empty-row">
                            <td>@startIndex</td> <!-- Burada boş satır için de sıralama numarasını ekliyoruz -->
                            <td>-</td> <!-- Boş satırda Şehir kısmı - olacak -->
                            <td><strong>0%</strong></td> <!-- Boş satırda Durum kısmı 0% olacak -->
                            <td><span class="badge bg-black">0</span></td> <!-- Boş satırda Cari Sayısı kısmı 0 olacak -->
                        </tr>
                        startIndex++; // Boş satırların sırasını artırıyoruz
                    }
                }
            </tbody>

            <!-- Toplam Satırı (Sabit Kalacak) -->
            <tfoot>
                <tr>
                    <td colspan="2"><strong>Toplam</strong></td>
                    <td style="display: flex; align-items: center;">
                        <span style="min-width: 40px; margin-right: 10px; font-weight: bold; text-align: left;">100%</span>
                        <div class="progress progress-xs" style="flex: 1;">
                            <div class="progress-bar progress-bar-success" style="width: 100%"></div>
                        </div>
                    </td>
                    <td><span class="badge bg-success">@toplamMarkaSayisi</span></td>
                </tr>
            </tfoot>
        </table>
    </div>
</div>

<!-- Sayfalama JavaScript -->
<script>
    document.addEventListener("DOMContentLoaded", function () {
    const prevButton3 = document.getElementById("prevPage3");
    const nextButton3 = document.getElementById("nextPage3");

    prevButton3.addEventListener("click", function () {
        let currentPage3 = @currentPage3;
        if (currentPage3 > 1) {
            window.location.href = "?page3=" + (currentPage3 - 1);
        }
    });

    nextButton3.addEventListener("click", function () {
        let currentPage3 = @currentPage3;
        if (currentPage3 < @totalPages3) {
            window.location.href = "?page3=" + (currentPage3 + 1);
        }
    });
});

</script>
