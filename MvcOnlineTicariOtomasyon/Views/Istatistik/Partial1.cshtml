@model IEnumerable<MvcOnlineTicariOtomasyon.Models.Sınıflar.SinifGrup2>

@{
    // Sayfa numarasını query string'den al
    int currentPage = Request.QueryString["page"] != null ? int.Parse(Request.QueryString["page"]) : 1;
    int rowsPerPage = 5;
    int totalRows = Model.Count();
    int totalPages = (int)Math.Ceiling((double)totalRows / rowsPerPage);

    // Sayfa verisini almak için Skip ve Take kullanıyoruz
    var currentPageData = Model.Skip((currentPage - 1) * rowsPerPage).Take(rowsPerPage);

    // Son sayfada eksik satırlar varsa, onları hesaplayalım
    int remainingRows = totalRows % rowsPerPage;
    bool isLastPage = currentPage == totalPages;

    // Başlangıç sırasını hesapla, ilk sayfa için 1, diğerleri için doğru sayıyı belirle
    int startIndex = (currentPage - 1) * rowsPerPage + 1; // Bu, sıralamanın her sayfada devam etmesini sağlar
}

<div class="card">
    <div class="card-header" style="display: flex; justify-content: space-between; align-items: center;">
        <h3 class="card-title">Departman Personel Tablosu</h3>
        <!-- Sayfalama Butonları Buraya Gelecek -->
        <div style="display: flex; gap: 10px; margin-left: auto;">
            <button id="prevPage" class="btn btn-primary" @(currentPage == 1 ? "disabled" : "")>« Geri</button>
            <span style="font-weight: bold;" id="pageInfo">Sayfa @currentPage / @totalPages</span>
            <button id="nextPage" class="btn btn-primary" @(currentPage == totalPages ? "disabled" : "")>İleri »</button>
        </div>
    </div>
    <div class="card-body p-0">
        <table class="table">
            <thead>
                <tr>
                    <th style="width: 55px">#</th>
                    <th>Departman</th>
                    <th>Durum</th>
                    <th style="width: 110px">Personel Sayısı</th>
                </tr>
            </thead>
            <tbody id="departmanTable">
                @{
                    int toplamPersonelSayisi = Model.Sum(x => x.Sayi);
                }

                @foreach (var x in currentPageData)
                {
                    double oran = toplamPersonelSayisi > 0 ? ((double)x.Sayi / toplamPersonelSayisi) * 100 : 1;
                    string oranStr = oran.ToString("0.##");

                    string progressBarClass = oran <= 20 ? "progress-bar-danger" :
                                               oran <= 40 ? "progress-bar-warning" :
                                               oran <= 60 ? "progress-bar-info" :
                                               oran <= 80 ? "progress-bar-primary" :
                                               "progress-bar-success";

                    string badgeClass = oran <= 20 ? "badge bg-danger" :
                                        oran <= 40 ? "badge bg-warning" :
                                        oran <= 60 ? "badge bg-info" :
                                        oran <= 80 ? "badge bg-primary" :
                                        "badge bg-success";

                    <tr class="departman-row">
                        <td>@startIndex</td> <!-- Burada startIndex kullanılıyor, sayfa sayfa devam eden sıralama -->
                        <td>@x.Departman</td>
                        <td style="display: flex; align-items: center;">
                            <span style="min-width: 40px; margin-right: 10px; font-weight: bold; text-align: left;">@oranStr%</span>
                            <div class="progress progress-xs" style="flex: 1;">
                                <div class="progress-bar @progressBarClass" style="width: @(oran)%"></div>
                            </div>
                        </td>
                        <td><span class="@badgeClass">@x.Sayi</span></td>
                    </tr>

                    startIndex++; // Sıra numarasını her satırda artırıyoruz
                }

                @if (isLastPage && remainingRows > 0)
                {
                    // Son sayfada eksik satır varsa boş satır ekle
                    for (int i = 0; i < (rowsPerPage - remainingRows); i++)
                    {
                        <tr class="empty-row">
                            <td>@startIndex</td> <!-- Burada boş satır için de sıralama numarasını ekliyoruz -->
                            <td>-</td> <!-- Boş satırda Departman kısmı - olacak -->
                            <td>0%</td> <!-- Boş satırda Durum kısmı 0% olacak -->
                            <td>0</td> <!-- Boş satırda Personel Sayısı kısmı 0 olacak -->
                        </tr>
                        startIndex++; // Boş satırların sırasını artırıyoruz
                    }
                }
            </tbody>

            <!-- Toplam Satırı (Sabit Kalacak) -->
            <tfoot>
                <tr>
                    <td colspan="2"><strong>Toplam</strong></td>
                    <td style="display: flex; align-items: center;">
                        <span style="min-width: 40px; margin-right: 10px; font-weight: bold; text-align: left;">100%</span>
                        <div class="progress progress-xs" style="flex: 1;">
                            <div class="progress-bar progress-bar-success" style="width: 100%"></div>
                        </div>
                    </td>
                    <td><span class="badge bg-success">@toplamPersonelSayisi</span></td>
                </tr>
            </tfoot>
        </table>
    </div>
</div>

<!-- Sayfalama JavaScript -->
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const prevButton = document.getElementById("prevPage");
        const nextButton = document.getElementById("nextPage");

        prevButton.addEventListener("click", function () {
            let currentPage = @currentPage;
            if (currentPage > 1) {
                window.location.href = "?page=" + (currentPage - 1);
            }
        });

        nextButton.addEventListener("click", function () {
            let currentPage = @currentPage;
            if (currentPage < @totalPages) {
                window.location.href = "?page=" + (currentPage + 1);
            }
        });
    });
</script>
